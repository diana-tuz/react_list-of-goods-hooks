{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortFields","SortDirections","goodsFromServer","sortByAlfabet","a","b","direction","byAsc","localeCompare","getSortGoods","goods","sortField","sortDirection","preparedGoods","sort","good1","good2","default","byAlfabet","byLength","length","byIndexdesc","indexOf","App","useState","setSortField","setSortDirection","sortGoods","className","onClick","type","cn","byDesc","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,EAOAC,E,0EApBCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGF,K,qBAAAA,E,kBAAAA,E,8BAAAA,E,mBAAAA,M,cAOAC,K,YAAAA,E,eAAAA,M,KAKL,IAAME,EAAgB,SAACC,EAAWC,EAAWC,GAC3C,OAAOA,IAAcL,EAAeM,MAChCH,EAAEI,cAAcH,GAChBA,EAAEG,cAAcJ,IAatB,SAASK,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAuB,YAAOH,GAuBpC,OArBIC,GACFE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAKX,EAAWiB,QACd,OAAO,EAET,KAAKjB,EAAWkB,UACd,OAAOf,EAAcY,EAAOC,EAAOJ,GAErC,KAAKZ,EAAWmB,SACd,OA3BuBd,EA2BIW,EA3BOV,EA2BAM,GA3BtBR,EA2BQW,GA1BtBK,SAAWf,EAAEe,OACVjB,EAAcC,EAAGC,EAAGC,GAGtBA,IAAcL,EAAeM,MAChCH,EAAEgB,OAASf,EAAEe,OACbf,EAAEe,OAAShB,EAAEgB,OAsBX,KAAKpB,EAAWqB,YACd,OAAOR,EAAcS,QAAQN,GAASH,EAAcS,QAAQP,GAE9D,QACE,OAAO,EAjCI,IAACX,EAAWC,EAAWC,KAsCnCO,EAGF,IAAMU,EAAgB,WAC3B,MAAkCC,mBAASxB,EAAWiB,SAAtD,mBAAON,EAAP,KAAkBc,EAAlB,KACA,EAA0CD,mBAASvB,EAAeM,OAAlE,mBAAOK,EAAP,KAAsBc,EAAtB,KACMC,EAAYlB,EAAaP,EAAiBS,EAAWC,GAwB3D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPJ,EAAazB,EAAWkB,YAE1BY,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYpB,IAAcX,EAAWkB,YANzC,iCAYA,wBACEW,QAAS,WACPJ,EAAazB,EAAWmB,WAE1BW,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYpB,IAAcX,EAAWmB,WANzC,4BAYA,wBACEU,QAAS,WAlDXjB,IAAkBX,EAAeM,OACnCmB,EAAiBzB,EAAe+B,QAE5BrB,IAAcX,EAAWiB,SAC3BQ,EAAazB,EAAWqB,eAG1BK,EAAiBzB,EAAeM,OAE5BI,IAAcX,EAAWqB,YAC3BI,EAAazB,EAAWiB,SACfN,IAAcX,EAAWiB,SAClCQ,EAAazB,EAAWqB,eAuCtBS,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYnB,IAAkBX,EAAeM,QAJjD,qBAUCI,IAAcX,EAAWiB,SACxB,wBACEY,QAAS,WA3CjBJ,EAAazB,EAAWiB,SACxBS,EAAiBzB,EAAeM,QA6CxBuB,KAAK,SACLF,UAAU,4BALZ,sBAWJ,6BACGD,EAAUM,KAAI,SAACC,GAAD,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCxJnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.822d6701.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortFields {\n  byAlfabet = 'alphabet',\n  byLength = 'length',\n  byIndexdesc = 'reverse default',\n  default = 'default',\n}\n\nenum SortDirections {\n  byAsc = 'asc',\n  byDesc = 'desc',\n}\n\nconst sortByAlfabet = (a: string, b: string, direction: SortDirections) => {\n  return direction === SortDirections.byAsc\n    ? a.localeCompare(b)\n    : b.localeCompare(a);\n};\n\nconst sortByLenght = (a: string, b: string, direction: SortDirections) => {\n  if (a.length === b.length) {\n    return sortByAlfabet(a, b, direction);\n  }\n\n  return direction === SortDirections.byAsc\n    ? a.length - b.length\n    : b.length - a.length;\n};\n\nfunction getSortGoods(\n  goods: string[],\n  sortField: SortFields,\n  sortDirection: SortDirections,\n) {\n  const preparedGoods: string[] = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortFields.default:\n          return 0;\n\n        case SortFields.byAlfabet:\n          return sortByAlfabet(good1, good2, sortDirection);\n\n        case SortFields.byLength:\n          return sortByLenght(good1, good2, sortDirection);\n\n        case SortFields.byIndexdesc:\n          return preparedGoods.indexOf(good2) - preparedGoods.indexOf(good1);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortFields.default);\n  const [sortDirection, setSortDirection] = useState(SortDirections.byAsc);\n  const sortGoods = getSortGoods(goodsFromServer, sortField, sortDirection);\n  const sortReverse = () => {\n    if (sortDirection === SortDirections.byAsc) {\n      setSortDirection(SortDirections.byDesc);\n\n      if (sortField === SortFields.default) {\n        setSortField(SortFields.byIndexdesc);\n      }\n    } else {\n      setSortDirection(SortDirections.byAsc);\n\n      if (sortField === SortFields.byIndexdesc) {\n        setSortField(SortFields.default);\n      } else if (sortField === SortFields.default) {\n        setSortField(SortFields.byIndexdesc);\n      }\n    }\n  };\n\n  const resetSorting = () => {\n    setSortField(SortFields.default);\n    setSortDirection(SortDirections.byAsc);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SortFields.byAlfabet);\n          }}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortFields.byAlfabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SortFields.byLength);\n          }}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortFields.byLength,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => sortReverse()}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': sortDirection === SortDirections.byAsc,\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortField !== SortFields.default && (\n          <button\n            onClick={() => {\n              resetSorting();\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}