{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","SortDirections","goodsFromServer","sortAlfabet","a","b","direction","Asc","localeCompare","getSortGoods","goods","sortField","sortDirection","preparedGoods","sort","good1","good2","Alfabet","Length","length","Indexdesc","indexOf","App","useState","Default","setSortField","setSortDirection","sortGoods","className","onClick","type","cn","Desc","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,EAOAC,E,0EApBCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGF,K,mBAAAA,E,gBAAAA,E,4BAAAA,E,mBAAAA,M,cAOAC,K,UAAAA,E,aAAAA,M,KAKL,IAAME,EAAc,SAACC,EAAWC,EAAWC,GACzC,OAAOA,IAAcL,EAAeM,IAChCH,EAAEI,cAAcH,GAChBA,EAAEG,cAAcJ,IAatB,SAASK,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAuB,YAAOH,GAmBpC,OAjBIC,GACFE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAKX,EAAOiB,QACV,OAAOd,EAAYY,EAAOC,EAAOJ,GAEnC,KAAKZ,EAAOkB,OACV,OAxBuBb,EAwBIW,EAxBOV,EAwBAM,GAxBtBR,EAwBQW,GAvBtBI,SAAWd,EAAEc,OACVhB,EAAYC,EAAGC,EAAGC,GAGpBA,IAAcL,EAAeM,IAChCH,EAAEe,OAASd,EAAEc,OACbd,EAAEc,OAASf,EAAEe,OAmBX,KAAKnB,EAAOoB,UACV,OAAOP,EAAcQ,QAAQL,GAASH,EAAcQ,QAAQN,GAC9D,QACE,OAAO,EA7BI,IAACX,EAAWC,EAAWC,KAkCnCO,EAGF,IAAMS,EAAgB,WAC3B,MAAkCC,mBAASvB,EAAOwB,SAAlD,mBAAOb,EAAP,KAAkBc,EAAlB,KACA,EAA0CF,mBAAStB,EAAeM,KAAlE,mBAAOK,EAAP,KAAsBc,EAAtB,KACMC,EAAYlB,EAAaP,EAAiBS,EAAWC,GAwB3D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPJ,EAAazB,EAAOiB,UAEtBa,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYpB,IAAcX,EAAOiB,UANrC,iCAYA,wBACEY,QAAS,WACPJ,EAAazB,EAAOkB,SAEtBY,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYpB,IAAcX,EAAOkB,SANrC,4BAYA,wBACEW,QAAS,WAlDXjB,IAAkBX,EAAeM,KACnCmB,EAAiBzB,EAAe+B,MAE5BrB,IAAcX,EAAOwB,SACvBC,EAAazB,EAAOoB,aAGtBM,EAAiBzB,EAAeM,KAE5BI,IAAcX,EAAOoB,UACvBK,EAAazB,EAAOwB,SACXb,IAAcX,EAAOwB,SAC9BC,EAAazB,EAAOoB,aAuClBU,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYnB,IAAkBX,EAAeM,MAJjD,qBAUCI,IAAcX,EAAOwB,SACpB,wBACEK,QA5CW,WACnBJ,EAAazB,EAAOwB,SACpBE,EAAiBzB,EAAeM,MA2CxBuB,KAAK,SACLF,UAAU,4BAHZ,sBASJ,6BACGD,EAAUM,KAAI,SAACC,GAAD,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YClJnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f4605101.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  Alfabet = 'alphabet',\n  Length = 'length',\n  Indexdesc = 'reverse Default',\n  Default = 'Default',\n}\n\nenum SortDirections {\n  Asc = 'asc',\n  Desc = 'desc',\n}\n\nconst sortAlfabet = (a: string, b: string, direction: SortDirections) => {\n  return direction === SortDirections.Asc\n    ? a.localeCompare(b)\n    : b.localeCompare(a);\n};\n\nconst sortByLenght = (a: string, b: string, direction: SortDirections) => {\n  if (a.length === b.length) {\n    return sortAlfabet(a, b, direction);\n  }\n\n  return direction === SortDirections.Asc\n    ? a.length - b.length\n    : b.length - a.length;\n};\n\nfunction getSortGoods(\n  goods: string[],\n  sortField: SortBy,\n  sortDirection: SortDirections,\n) {\n  const preparedGoods: string[] = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortBy.Alfabet:\n          return sortAlfabet(good1, good2, sortDirection);\n\n        case SortBy.Length:\n          return sortByLenght(good1, good2, sortDirection);\n\n        case SortBy.Indexdesc:\n          return preparedGoods.indexOf(good2) - preparedGoods.indexOf(good1);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortBy.Default);\n  const [sortDirection, setSortDirection] = useState(SortDirections.Asc);\n  const sortGoods = getSortGoods(goodsFromServer, sortField, sortDirection);\n  const sortReverse = () => {\n    if (sortDirection === SortDirections.Asc) {\n      setSortDirection(SortDirections.Desc);\n\n      if (sortField === SortBy.Default) {\n        setSortField(SortBy.Indexdesc);\n      }\n    } else {\n      setSortDirection(SortDirections.Asc);\n\n      if (sortField === SortBy.Indexdesc) {\n        setSortField(SortBy.Default);\n      } else if (sortField === SortBy.Default) {\n        setSortField(SortBy.Indexdesc);\n      }\n    }\n  };\n\n  const resetSorting = () => {\n    setSortField(SortBy.Default);\n    setSortDirection(SortDirections.Asc);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SortBy.Alfabet);\n          }}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortBy.Alfabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SortBy.Length);\n          }}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortBy.Length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => sortReverse()}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': sortDirection === SortDirections.Asc,\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortField !== SortBy.Default && (\n          <button\n            onClick={resetSorting}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}