{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","sortAlphabet","a","b","direction","localeCompare","getSortGoods","goods","sortField","sortDirection","preparedGoods","sort","good1","good2","Alfabet","Length","length","IndexReverse","indexOf","App","useState","Default","setSortField","isReversed","setIsReversed","sortGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,mBAAAA,E,gBAAAA,E,6BAAAA,E,mBAAAA,M,KAOL,IAAME,EAAe,SAACC,EAAWC,EAAWC,GAC1C,OAAOA,EACHF,EAAEG,cAAcF,GAChBA,EAAEE,cAAcH,IAatB,SAASI,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAuB,YAAOH,GAmBpC,OAjBIC,GACFE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAKT,EAAOe,QACV,OAAOb,EAAaW,EAAOC,EAAOJ,GAEpC,KAAKV,EAAOgB,OACV,OAxBuBZ,EAwBIU,EAxBOT,EAwBAK,GAxBtBP,EAwBQU,GAvBtBI,SAAWb,EAAEa,OACVf,EAAaC,EAAGC,EAAGC,GAGrBA,EACHF,EAAEc,OAASb,EAAEa,OACbb,EAAEa,OAASd,EAAEc,OAmBX,KAAKjB,EAAOkB,aACV,OAAOP,EAAcQ,QAAQL,GAASH,EAAcQ,QAAQN,GAC9D,QACE,OAAO,EA7BI,IAACV,EAAWC,EAAWC,KAkCnCM,EAGF,IAAMS,EAAgB,WAC3B,MAAkCC,mBAASrB,EAAOsB,SAAlD,mBAAOb,EAAP,KAAkBc,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAYnB,EAAaN,EAAiBQ,EAAWe,GAwB3D,OACE,sBAAKG,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPL,EAAavB,EAAOe,UAEtBc,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYrB,IAAcT,EAAOe,UANrC,iCAYA,wBACEa,QAAS,WACPL,EAAavB,EAAOgB,SAEtBa,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYrB,IAAcT,EAAOgB,SANrC,4BAYA,wBACEY,QAnDY,YACC,IAAfJ,GACFC,GAAc,GAEVhB,IAAcT,EAAOsB,SACvBC,EAAavB,EAAOkB,gBAGtBO,GAAc,GAEVhB,IAAcT,EAAOkB,aACvBK,EAAavB,EAAOsB,SACXb,IAAcT,EAAOsB,SAC9BC,EAAavB,EAAOkB,gBAuClBW,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAA2B,IAAfN,IAJhB,qBAUCf,IAAcT,EAAOsB,SACpB,wBACEM,QA5CW,WACnBL,EAAavB,EAAOsB,SACpBG,GAAc,IA2CNI,KAAK,SACLF,UAAU,4BAHZ,sBASJ,6BACGD,EAAUK,KAAI,SAACC,GAAD,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC7InBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b2aff7cd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  Alfabet = 'alphabet',\n  Length = 'length',\n  IndexReverse = 'index reverse',\n  Default = 'Default',\n}\n\nconst sortAlphabet = (a: string, b: string, direction: boolean) => {\n  return direction\n    ? a.localeCompare(b)\n    : b.localeCompare(a);\n};\n\nconst sortByLenght = (a: string, b: string, direction: boolean) => {\n  if (a.length === b.length) {\n    return sortAlphabet(a, b, direction);\n  }\n\n  return direction\n    ? a.length - b.length\n    : b.length - a.length;\n};\n\nfunction getSortGoods(\n  goods: string[],\n  sortField: SortBy,\n  sortDirection: boolean,\n) {\n  const preparedGoods: string[] = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortBy.Alfabet:\n          return sortAlphabet(good1, good2, sortDirection);\n\n        case SortBy.Length:\n          return sortByLenght(good1, good2, sortDirection);\n\n        case SortBy.IndexReverse:\n          return preparedGoods.indexOf(good2) - preparedGoods.indexOf(good1);\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortBy.Default);\n  const [isReversed, setIsReversed] = useState(true);\n  const sortGoods = getSortGoods(goodsFromServer, sortField, isReversed);\n  const sortReverse = () => {\n    if (isReversed === true) {\n      setIsReversed(false);\n\n      if (sortField === SortBy.Default) {\n        setSortField(SortBy.IndexReverse);\n      }\n    } else {\n      setIsReversed(true);\n\n      if (sortField === SortBy.IndexReverse) {\n        setSortField(SortBy.Default);\n      } else if (sortField === SortBy.Default) {\n        setSortField(SortBy.IndexReverse);\n      }\n    }\n  };\n\n  const resetSorting = () => {\n    setSortField(SortBy.Default);\n    setIsReversed(true);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SortBy.Alfabet);\n          }}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SortBy.Alfabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SortBy.Length);\n          }}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SortBy.Length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={sortReverse}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': isReversed === true,\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortField !== SortBy.Default && (\n          <button\n            onClick={resetSorting}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        {sortGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}